package com.manifestcorp.techreads.controller;

import static org.springframework.web.bind.annotation.RequestMethod.POST;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import com.manifestcorp.techreads.model.Book;
import com.manifestcorp.techreads.repository.BookRepository;

@Controller
@RequestMapping("/books")
public class BookController {
	
	@Autowired
	BookRepository bookRepository;
	
	@RequestMapping({"","/"})
	public ModelAndView books() {
		ModelAndView mav = new ModelAndView("books");
		List<Book> books = bookRepository.findAll();
		mav.addObject("books", books);
		return mav;
	}
	
	@RequestMapping({"/add"})
	public String add(Model model) {
		model.addAttribute("bookForm", new Book());
		return "add";
	}
	
	@RequestMapping(value = {"", "/"}, method=POST)
	public RedirectView addBook(Book book) {
		bookRepository.saveAndFlush(book);
		return new RedirectView("books");
	}
	
	@RequestMapping({"/delete/{id}"})
	public RedirectView delete(@PathVariable("id") Long id, Model model) {
		bookRepository.delete(id);
		return new RedirectView("/books");
	}
	
	@RequestMapping({"/edit/{id}"})
	public String edit(@PathVariable("id") Long id, Model model) {
		model.addAttribute("editForm", bookRepository.findOne(id));
		bookRepository.delete(id);
		return "edit";
	}
	
	@RequestMapping(value = {"", "/"}, method=RequestMethod.PUT)
	public RedirectView editBook(Book book) {
		bookRepository.saveAndFlush(book);
		return new RedirectView("books");
	}
	
	@RequestMapping({"/detail/{id}"})
	public String detail(@PathVariable("id") Long id, Model model) {
		model.addAttribute("book", bookRepository.findOne(id));
		return "detail";
	}
}
